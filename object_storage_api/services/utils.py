"""
Collection of some utility functions used by services
"""

# pylint:disable=fixme
# TODO: Some of this file is identical to the one in inventory-management-system-api - Use common repo?

import logging
import re

logger = logging.getLogger()


def generate_code(entity_id: str, name: str, entity_type: str) -> str:
    """
    Generate a code for an entity based on its entity ID and name. This is used to maintain uniqueness and prevent
    duplicates within the same entity. (E.g. a duplicate subcategories within a category)

    The code is generated by converting the name to lowercase and replacing spaces with hyphens. Leading and
    trailing spaces are removed, and consecutive spaces are replaced with a single hyphen.

    :param entity_id: Entity ID to which the new entity will belong.
    :param name: Name of the entity.
    :param entity_type: Name of the entity type e.g. catalogue category/system (Used for logging).
    :return: The generated code for the entity.
    """
    logger.info("Generating code for the %s based on its entity_id and name", entity_type)
    name = name.lower().strip()
    return f"{entity_id}-{re.sub(r"\s+", "-", name)}"
